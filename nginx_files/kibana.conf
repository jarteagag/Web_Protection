server {
    listen 80;
    server_name dashboard.skipficloud.io;

### Enable the "Server header response"
    server_tokens off; # removed pound sign
    more_set_headers 'Server: SKIPFI Web Protection';

    return 302 https://$server_name:5601$request_uri;
}

### the https server
server {
    # listen on ssl, deliver with speedy if possible
    listen 10.128.0.5:5601 ssl;
    error_log  logs/dash_error.log;

### Enable the "Server header response"
    server_tokens off; # removed pound sign
    more_set_headers 'Server: SKIPFI Web Protection';


### Authentication
    auth_basic           "Administrator’s Area";
    auth_basic_user_file /usr/local/nginx/.htpasswd;



    server_name dashboard.skipficloud.io;

    # change these paths!
#    ssl_certificate /home/alejandro_lopezrm/nginx.pem;
#    ssl_certificate_key /home/alejandro_lopezrm/nginx.key;

     ssl_certificate /etc/letsencrypt/live/dashboard.skipficloud.io/fullchain.pem;
     ssl_certificate_key /etc/letsencrypt/live/dashboard.skipficloud.io/privkey.pem;
     ssl_dhparam /etc/ssl/certs/dhparam.pem;

     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
     ssl_prefer_server_ciphers on;
     ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
     ssl_ecdh_curve secp384r1;
     ssl_session_cache shared:SSL:50m;
     ssl_session_tickets off;
     ssl_stapling on;
     ssl_stapling_verify on;


    # enables all versions of TLS, but not SSLv2 or 3 which are weak and now deprecated.
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # disables all weak ciphers
#    ssl_ciphers 'AES128+EECDH:AES128+EDH';

#    ssl_prefer_server_ciphers on;


    location / {
#        ModSecurityEnabled on;
#        ModSecurityConfig modsec_includes.conf;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://127.0.0.1:5601;
        proxy_redirect off;

        # Socket.IO Support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

}
